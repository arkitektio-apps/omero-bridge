builds:
- build_id: a6e63eb2-7489-4165-827e-1a286464920f
  build_run: 4833ecaa-33b5-4ded-996c-dc9c4d1a11c5
  description: This is a vanilla flavour
  flavour: vanilla
  inspection:
    definitions:
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchProjects($search: String, $values: [ID!]) {\n  options:\
            \ projects(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/project'
        key: project
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Dataset for Project
      interfaces: []
      kind: GENERATOR
      name: Yield Dataset for Project
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: GENERATOR
      name: Yield Image for Dataset
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: FUNCTION
      name: Print Metadata
      portGroups: []
      returns: []
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image to convert
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      collections: []
      description: No Description
      interfaces: []
      kind: FUNCTION
      name: Convert an image
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation
        identifier: '@mikro/representation'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation to convert
        identifier: '@mikro/representation'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      collections: []
      description: No Description
      interfaces: []
      kind: FUNCTION
      name: Convert a representation
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    size: 1619382614
  manifest:
    author: jhnnsrs
    entrypoint: app
    identifier: omero-bridge
    requirements: []
    scopes:
    - read
    version: 0.0.1
  selectors: []
- build_id: cf714c21-fcda-4312-b204-764d53737c69
  build_run: c6aee5e2-dbcc-481f-a16b-c3899995c388
  description: This is a vanilla flavour
  flavour: vanilla
  inspection:
    definitions:
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchProjects($search: String, $values: [ID!]) {\n  options:\
            \ projects(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/project'
        key: project
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Dataset for Project
      interfaces: []
      kind: GENERATOR
      name: Yield Dataset for Project
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: GENERATOR
      name: Yield Image for Dataset
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: FUNCTION
      name: Print Metadata
      portGroups: []
      returns: []
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image to convert
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      collections: []
      description: No Description
      interfaces: []
      kind: FUNCTION
      name: Convert an image
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation
        identifier: '@mikro/representation'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation to convert
        identifier: '@mikro/representation'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      collections: []
      description: No Description
      interfaces: []
      kind: FUNCTION
      name: Convert a representation
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    size: 1619394059
  manifest:
    author: jhnnsrs
    entrypoint: app
    identifier: omero-bridge
    requirements: []
    scopes:
    - read
    version: 0.0.2
  selectors: []
- build_id: a774ddf5-c6fc-43bd-a405-732cd2a9c921
  build_run: d27a59f4-71c7-415e-ac92-edcb0a9f8f71
  description: This is a vanilla flavour
  flavour: vanilla
  inspection:
    definitions:
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchProjects($search: String, $values: [ID!]) {\n  options:\
            \ projects(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/project'
        key: project
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Dataset for Project
      interfaces: []
      kind: GENERATOR
      name: Yield Dataset for Project
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: GENERATOR
      name: Yield Image for Dataset
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: FUNCTION
      name: Print Metadata
      portGroups: []
      returns: []
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image to convert
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      collections: []
      description: 'Converts an image to a representation

        on mikro so that it can be used in mikro

        powered workflows'
      interfaces: []
      kind: FUNCTION
      name: Convert an image to Mikro
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation
        identifier: '@mikro/representation'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation to convert
        identifier: '@mikro/representation'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The dataset to add the image to
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        label: dataset
        nullable: true
        scope: GLOBAL
      collections: []
      description: 'Converts a representation to an image on

        the OMERO server'
      interfaces: []
      kind: FUNCTION
      name: Convert a representation
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    size: 1619405944
  manifest:
    author: jhnnsrs
    entrypoint: app
    identifier: omero-bridge
    requirements: []
    scopes:
    - read
    version: 0.0.2
  selectors: []
- build_id: 38f3bfe6-b3fe-4e43-a201-49224c404d35
  build_run: 8fa73a49-5036-4857-b7a9-09aeb99e9f46
  description: This is a vanilla flavour
  flavour: vanilla
  inspection:
    definitions:
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchProjects($search: String, $values: [ID!]) {\n  options:\
            \ projects(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/project'
        key: project
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Dataset for Project
      interfaces: []
      kind: GENERATOR
      name: Yield Dataset for Project
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: GENERATOR
      name: Yield Image for Dataset
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: FUNCTION
      name: Print Metadata
      portGroups: []
      returns: []
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image to convert
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      collections: []
      description: 'Converts an image to a representation

        on mikro so that it can be used in mikro

        powered workflows'
      interfaces: []
      kind: FUNCTION
      name: Convert an image to Mikro
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation
        identifier: '@mikro/representation'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation to convert
        identifier: '@mikro/representation'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The dataset to add the image to
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        label: dataset
        nullable: true
        scope: GLOBAL
      collections: []
      description: 'Converts a representation to an image on

        the OMERO server'
      interfaces: []
      kind: FUNCTION
      name: Convert a representation
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    size: 1619412184
  manifest:
    author: jhnnsrs
    entrypoint: app
    identifier: omero-bridge
    requirements: []
    scopes:
    - read
    version: 0.0.3
  selectors: []
- build_id: 98ec92b1-a6e7-4509-b6e3-22cb6bacf74c
  build_run: 303c013b-aac9-4dc8-971f-b21ebcd13e87
  description: This is a vanilla flavour
  flavour: vanilla
  inspection:
    definitions:
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchProjects($search: String, $values: [ID!]) {\n  options:\
            \ projects(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/project'
        key: project
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Dataset for Project
      interfaces: []
      kind: GENERATOR
      name: Yield Dataset for Project
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: GENERATOR
      name: Yield Image for Dataset
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: FUNCTION
      name: Print Metadata
      portGroups: []
      returns: []
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image to convert
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      collections: []
      description: 'Converts an image to a representation

        on mikro so that it can be used in mikro

        powered workflows'
      interfaces: []
      kind: FUNCTION
      name: Convert an image to Mikro
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation
        identifier: '@mikro/representation'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation to convert
        identifier: '@mikro/representation'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The dataset to add the image to
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        label: dataset
        nullable: true
        scope: GLOBAL
      collections: []
      description: 'Converts a representation to an image on

        the OMERO server'
      interfaces: []
      kind: FUNCTION
      name: Convert a representation
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    size: 1619424820
  manifest:
    author: jhnnsrs
    entrypoint: app
    identifier: omero-bridge
    requirements: []
    scopes:
    - read
    version: 0.0.3
  selectors: []
- build_id: faad0e71-7137-47cc-b106-1c580832bca5
  build_run: 3629a360-d68f-46c7-bd4f-aa7c30d72991
  description: This is a vanilla flavour
  flavour: vanilla
  inspection:
    definitions:
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchProjects($search: String, $values: [ID!]) {\n  options:\
            \ projects(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/project'
        key: project
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Dataset for Project
      interfaces: []
      kind: GENERATOR
      name: Yield Dataset for Project
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: GENERATOR
      name: Yield Image for Dataset
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
      collections: []
      description: Yield Image for Dataset
      interfaces: []
      kind: FUNCTION
      name: Print Metadata
      portGroups: []
      returns: []
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image to convert
        identifier: '@omero-ark/image'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      collections: []
      description: 'Converts an image to a representation

        on mikro so that it can be used in mikro

        powered workflows'
      interfaces: []
      kind: FUNCTION
      name: Convert an image to Mikro
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation
        identifier: '@mikro/representation'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    - args:
      - assignWidget:
          kind: SearchWidget
          query: "query search_representation($search: String, $values: [ID]) {\n\
            \  options: representations(name: $search, limit: 20, ids: $values) {\n\
            \    value: id\n    label: name\n  }\n}"
          ward: mikro
        description: The representation to convert
        identifier: '@mikro/representation'
        key: image
        kind: STRUCTURE
        label: image
        nullable: false
        scope: GLOBAL
      - assignWidget:
          kind: SearchWidget
          query: "query SearchDatasets($search: String, $values: [ID!]) {\n  options:\
            \ datasets(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The dataset to add the image to
        identifier: '@omero-ark/dataset'
        key: dataset
        kind: STRUCTURE
        label: dataset
        nullable: true
        scope: GLOBAL
      collections: []
      description: 'Converts a representation to an image on

        the OMERO server'
      interfaces: []
      kind: FUNCTION
      name: Convert a representation
      portGroups: []
      returns:
      - assignWidget:
          kind: SearchWidget
          query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
            \ images(\n    filters: {search: $search, ids: $values}\n    pagination:\
            \ {limit: 10}\n  ) {\n    value: id\n    label: name\n  }\n}"
          ward: omero-ark
        description: The image
        identifier: '@omero-ark/image'
        key: return0
        kind: STRUCTURE
        nullable: false
        scope: GLOBAL
    size: 1619431060
  manifest:
    author: jhnnsrs
    entrypoint: app
    identifier: omero-bridge
    requirements: []
    scopes:
    - read
    version: 0.0.4
  selectors: []
latest_build_run: 3629a360-d68f-46c7-bd4f-aa7c30d72991
